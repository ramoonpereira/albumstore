app:
  env: ${ALBUMSTORE_ENV:development}
  name: albumstore
  description: Albumstore is an API to manager Discs and Sales
  version: 0.0.1
  contact: Ramon Pereira
  url: https://www.linkedin.com/in/ramon-pereira-94a04b107/
  email: ramon.alves@live.com
spring:
  datasource:
    url: ${ALBUMSTORE_DATASOURCE_URL:jdbc:mysql://127.0.0.1:3306/albumstore?createDatabaseIfNotExist=true&useSSL=false&useTimezone=true&serverTimezone=UTC}
    username: ${ALBUMSTORE_DATASOURCE_USERNAME:albumstore}
    password: ${ALBUMSTORE_DATASOURCE_PASSWORD:!@12QWqw}
  jpa:
    hibernate.ddl-auto: none
    show-sql: false
    properties.hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
  flyway:
    check-location: true
    enabled: true
    url: ${ALBUMSTORE_DATASOURCE_URL:jdbc:mysql://127.0.0.1:3306/albumstore?createDatabaseIfNotExist=true&useSSL=false&useTimezone=true&serverTimezone=UTC}
    username: ${ALBUMSTORE_DATASOURCE_USERNAME:albumstore}
    password: ${ALBUMSTORE_DATASOURCE_PASSWORD:!@12QWqw}
  jackson:
    default-property-inclusion: non_null
    serialization:
      fail-on-empty-beans: false
  security:
    user:
      name: ${ALBUMSTORE_SECURITY_BASIC_NAME:albumstore}
      password: ${ALBUMSTORE_SECURITY_BASIC_PASSWORD:albumstore}
jwt:
  secretKey: ${ALBUMSTORE_SECURITY_JWT_SECRET_KEY:stubJWT}
spotify:
  client-id: ${ALBUMSTORE_SPOTIFY_CLIENT_ID}
  client-secret: ${ALBUMSTORE_SPOTIFY_CLIENT_SECRET}